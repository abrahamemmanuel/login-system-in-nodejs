{"version":3,"sources":["../../../src/controllers/usersController/users.js"],"names":["UsersController","req","res","render","body","name","email","password","password2","errors","push","msg","length","User","findOne","then","user","newUser","bcrypt","genSalt","err","salt","hash","save","flash","redirect","catch","console","log","next","passport","authenticate","successRedirect","failureRedirect","failureFlash","logout","UserController"],"mappings":"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","sourcesContent":["/* eslint-disable class-methods-use-this */\nimport passport from 'passport';\nimport bcrypt from 'bcryptjs';\nimport User from '../../models/User';\n\n\nclass UsersController {\n\n  getRegistrationPage(req, res) {\n    res.render('register');\n  }\n  \n  registerUser(req, res) {\n   \n   const { name, email, password, password2 } = req.body;\n   let errors = [];\n\n   // Check required fields\n   if(!name || !email || !password || !password2) {\n     errors.push({ msg: 'Please fill in all fields' });\n   }\n\n    // Check passwords match\n    if(password !== password2) {\n      errors.push({ msg: 'Passwords do not match' });\n    }\n\n    // Check pass length\n    if(password.length < 6) {\n      errors.push({ msg: 'Password should be at least 6 characters' });\n    }\n\n    if(errors.length > 0) {\n      res.render('register', {errors, name, email, password, password2});\n    } else {\n      // Validation passed\n      User.findOne({ email: email })\n        .then(user => {\n           if(user) {\n             // User exists\n             errors.push({ msg: 'User already exist with this email' });\n             res.render('register', { errors, name, email, password, password2});\n           } else {\n            const newUser = new User({\n              name,\n              email,\n              password\n            });\n         \n            // Hash password\n            bcrypt.genSalt(10, (err, salt) => bcrypt.hash(newUser.password, salt, (err, hash) => {\n              if(err) throw err;\n              // Set password to hashed\n              newUser.password = hash;\n              // Save user\n              newUser.save()\n                 .then(user => {\n                   req.flash('success_msg', 'You are now registered and can log in');\n                   res.redirect('/users/login');\n                 })\n                 .catch(err => console.log(err));\n            }));\n           }\n        });\n    }\n }\n\ngetLoginPage(req, res) {\n    res.render('login');\n  }\n\ndashboard(req, res) {\n  res.render('dashboard', { user: req.user })\n}  \n\nlogin(req, res, next) {\n passport.authenticate('local', {\n   successRedirect: '/dashboard',\n   failureRedirect: '/users/login',\n   failureFlash: true\n })(req, res, next);\n}\n\nlogout(req, res) {\n  req.logout();\n  req.flash('success_msg', 'You are logged out');\n  res.redirect('/users/login');\n}\n\n}\n\nconst UserController = new UsersController();\n\n\nexport default UserController;\n"],"file":"users.js"}