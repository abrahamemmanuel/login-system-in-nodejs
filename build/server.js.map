{"version":3,"sources":["../src/server.js"],"names":["app","require","passport","use","expressLayouts","set","express","urlencoded","extended","secret","resave","saveUninitialized","initialize","session","req","res","next","locals","success_msg","flash","error_msg","error","router","db","key","mongoURI","mongoose","connect","useNewUrlParser","then","console","log","catch","err","get","render","login","listen","env"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,uBAAZ,C,CAEA;;AACAC,OAAO,CAAC,mBAAD,CAAP,CAA6BC,iBAA7B,E,CAEA;;;AACAF,GAAG,CAACG,GAAJ,CAAQC,0BAAR;AACAJ,GAAG,CAACK,GAAJ,CAAQ,aAAR,EAAuB,KAAvB,E,CAEA;;AACAL,GAAG,CAACG,GAAJ,CAAQG,iBAAQC,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR,E,CAEA;;AACAR,GAAG,CAACG,GAAJ,CACI,6BAAQ;AACNM,EAAAA,MAAM,EAAE,QADF;AAENC,EAAAA,MAAM,EAAE,IAFF;AAGNC,EAAAA,iBAAiB,EAAE;AAHb,CAAR,CADJ,E,CAQA;;AACAX,GAAG,CAACG,GAAJ,CAAQD,kBAASU,UAAT,EAAR;AACAZ,GAAG,CAACG,GAAJ,CAAQD,kBAASW,OAAT,EAAR,E,CAEA;;AACAb,GAAG,CAACG,GAAJ,CAAQ,4BAAR,E,CAEA;;AACAH,GAAG,CAACG,GAAJ,CAAQ,UAACW,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BD,EAAAA,GAAG,CAACE,MAAJ,CAAWC,WAAX,GAAyBJ,GAAG,CAACK,KAAJ,CAAU,aAAV,CAAzB;AACAJ,EAAAA,GAAG,CAACE,MAAJ,CAAWG,SAAX,GAAuBN,GAAG,CAACK,KAAJ,CAAU,WAAV,CAAvB;AACAJ,EAAAA,GAAG,CAACE,MAAJ,CAAWI,KAAX,GAAmBP,GAAG,CAACK,KAAJ,CAAU,OAAV,CAAnB;AACAH,EAAAA,IAAI;AACL,CALD,E,CAOA;;AACAhB,GAAG,CAACG,GAAJ,CAAQmB,cAAR,E,CAEA;;AACA,IAAMC,EAAE,GAAGC,cAAIC,QAAf,C,CAEA;;AACAC,kBAASC,OAAT,CAAiBJ,EAAjB,EAAqB;AAAEK,EAAAA,eAAe,EAAE;AAAnB,CAArB,EAAgDC,IAAhD,CAAqD;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAN;AAAA,CAArD,EAAgGC,KAAhG,CAAsG,UAAAC,GAAG;AAAA,SAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,CAAzG,E,CAEA;;;AAEAjC,GAAG,CAACkC,GAAJ,CAAQ,4FAAR,EAAsG,UAACpB,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACoB,MAAJ,CAAWC,KAAX,CAAd;AAAA,CAAtG;AAEApC,GAAG,CAACqC,MAAJ,CAAWb,cAAIc,GAAf,EAAoB,YAAM;AAACR,EAAAA,OAAO,CAACC,GAAR,kCAAsCP,cAAIc,GAA1C;AAAiD,CAA5E;eAEetC,G","sourcesContent":["import express from 'express';\nimport passport from 'passport'\nimport expressLayouts from 'express-ejs-layouts';\nimport flash from 'connect-flash';\nimport session from 'express-session';\nimport mongoose from 'mongoose';\nimport key from './config/keys';\nimport router from './routes/index';\nimport path from 'path';\n\nconst app = express();\n\n// Passport Config\nrequire('./config/passport')(passport);\n\n// EJS\napp.use(expressLayouts);\napp.set('view engine', 'ejs');\n\n// Bodyparser\napp.use(express.urlencoded({ extended: true }));\n\n// Express session\napp.use(\n    session({\n      secret: 'secret',\n      resave: true,\n      saveUninitialized: true\n    })\n  );\n\n//Passport middleware\napp.use(passport.initialize());\napp.use(passport.session());\n\n// Connect flashhero\napp.use(flash());\n\n// Global Vars\napp.use((req, res, next) => {\n  res.locals.success_msg = req.flash('success_msg');\n  res.locals.error_msg = req.flash('error_msg');\n  res.locals.error = req.flash('error');\n  next();\n});\n\n// Routes\napp.use(router);\n\n// DB Config\nconst db = key.mongoURI;\n\n// Connect to MongoDB\nmongoose.connect(db, { useNewUrlParser: true }).then(() => console.log('MongoDB Connected...')).catch(err => console.log(err));\n\n// if (!module.parent) { app.listen(key.env, () => console.log(`Server running on port ${key.env}`)); }// eslint-disable-line no-console\n\napp.get('/https://aqueous-depths-31554.herokuapp.com/aqueous-depths-31554.herokuapp.com/users/login', (req, res) => res.render(login));\n\napp.listen(key.env, () => {console.log(`Server running on port ${key.env}`)});\n\nexport default app;\n"],"file":"server.js"}